import random
import sys
from random import randint


def get_input():
    if sys.version_info >= (3, 0):
        return input()
    else:
        return raw_input()


def drawBoard(board):
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('-----------')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('-----------')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])


def inputPlayerLetter():
    letter = ''
    while not (letter == 'X' or letter == 'O'):
        print('Do you want to be X or O?')
        letter = get_input().upper()
    if letter == 'X':
        return ['X', 'O']
    else:
        return ['O', 'X']


def whoGoesFirst():
    if random.randint(0, 1) == 0:
        return 'computer'
    else:
        return 'player'


def playAgain():
    print('Do you want to play again? (yes or no)')
    return get_input().lower().startswith('y')


def makeMove(board, letter, move):
    if isSpaceFree(board, move):
        board[move] = letter
    else:
        raise Exception("makeMove: the field is not empty!")


def isWinner(bo, le):
    return ((bo[7] == le and bo[8] == le and bo[9] == le) or
            (bo[4] == le and bo[5] == le and bo[6] == le) or
            (bo[1] == le and bo[2] == le and bo[3] == le) or
            (bo[7] == le and bo[4] == le and bo[1] == le) or
            (bo[8] == le and bo[5] == le and bo[2] == le) or
            (bo[9] == le and bo[6] == le and bo[3] == le) or
            (bo[7] == le and bo[5] == le and bo[3] == le) or
            (bo[9] == le and bo[5] == le and bo[1] == le))


def getBoardCopy(board):
    dupeBoard = []
    for i in board:
        dupeBoard.append(i)
    return dupeBoard


def isSpaceFree(board, move):
    return board[move].isdigit()


def getPlayerMove(board):
    move = ' '
    while move not in '1 2 3 4 5 6 7 8 9'.split() or not isSpaceFree(board, int(move)):
        print('What is your next move? (1-9)')
        move = get_input()
    return int(move)


def chooseRandomMoveFromList(board, movesList):
    possibleMoves = []
    for i in movesList:
        if isSpaceFree(board, i):
            possibleMoves.append(i)
    if len(possibleMoves) > 0:
        return random.choice(possibleMoves)
    else:
        return None


def getComputerMove(board, computerLetter):
    if computerLetter == 'X':
        playerLetter = 'O'
    else:
        playerLetter = 'X'

    # Check if computer can win
    for i in range(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, computerLetter, i)
            if isWinner(copy, computerLetter):
                return i

    # Check if player could win, block them
    for i in range(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, playerLetter, i)
            if isWinner(copy, playerLetter):
                return i

    # Try to take one of the corners
    move = chooseRandomMoveFromList(board, [1, 3, 7, 9])
    if move is not None:
        return move

    # Try to take the center
    if isSpaceFree(board, 5):
        return 5

    # Move on one of the sides
    return chooseRandomMoveFromList(board, [2, 4, 6, 8])


def isBoardFull(board):
    for i in range(1, 10):
        if isSpaceFree(board, i):
            return False
    return True


def main():
    d = 0
    while d != 1:
        print('')
        print('')
        print(".............................WELCOME TO GAME CENTER.............................")
        print('')
        print('1) Tic Tac Toe Game')
        print("2) Rock, Paper, Scissors")
        print("3) Exit")
        print('')
        choice = input()

        # Rock, Paper, Scissors
        if choice == '2':
            t = ['Rock', 'Paper', 'Scissors']
            comp = t[randint(0, 2)]
            player = False
            x = 0
            print('you dont want to continue press "n"')

            while player == False and x != 1:
                player = input('Rock,Paper,Scissors?')
                if player == comp:
                    print("Tie")
                elif player == "Rock":
                    if comp == "Paper":
                        print("you lose!")
                    else:
                        print("You WIN")
                elif player == "Paper":
                    if comp == "Scissors":
                        print("you lose!")
                    else:
                        print("You WIN")
                elif player == "Scissors":
                    if comp == "Rock":
                        print("you lose!")
                    else:
                        print("You WIN")
                elif player == 'n':
                    x = 1
                else:
                    print("Not VALID")
                    player = False
                comp = t[randint(0, 2)]

        # Tic Tac Toe
        elif choice == '1':
            print('Welcome to Tic Tac Toe!')
            random.seed()
            while True:
                theBoard = [' '] * 10
                for i in range(9, 0, -1):
                    theBoard[i] = str(i)

                playerLetter, computerLetter = inputPlayerLetter()
                turn = whoGoesFirst()
                print('The ' + turn + ' will go first.')
                gameIsPlaying = True

                while gameIsPlaying:
                    if turn == 'player':
                        drawBoard(theBoard)
                        move = getPlayerMove(theBoard)
                        makeMove(theBoard, playerLetter, move)

                        if isWinner(theBoard, playerLetter):
                            drawBoard(theBoard)
                            print('Hooray! You have won the game!')
                            gameIsPlaying = False
                        else:
                            if isBoardFull(theBoard):
                                drawBoard(theBoard)
                                print('The game is a tie!')
                                break
                            else:
                                turn = 'computer'

                    else:  # computer's turn
                        move = getComputerMove(theBoard, computerLetter)
                        makeMove(theBoard, computerLetter, move)

                        if isWinner(theBoard, computerLetter):
                            drawBoard(theBoard)
                            print('The computer has beaten you! You lose.')
                            gameIsPlaying = False
                        else:
                            if isBoardFull(theBoard):
                                drawBoard(theBoard)
                                print('The game is a tie!')
                                break
                            else:
                                turn = 'player'

                if not playAgain():
                    break

        elif choice == '3':
            d = 1
        else:
            print("NOT A VALID INPUT")


if __name__ == "__main__":
    main()
